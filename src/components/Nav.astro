---
import data from '../data/site.json'
import DarkModeToggle from './DarkModeToggle.astro'
---

<nav transition:persist class="border-gray-200 bg-stone-100 dark:bg-slate-800">
  <div
    class="mx-auto flex max-w-screen-xl flex-wrap items-center justify-between p-4"
  >
    <a href="/">
      <span
        class="self-center whitespace-nowrap text-2xl font-semibold dark:text-white"
        >{data.siteName}</span
      >
    </a>

    <button
      data-collapse-toggle="navbar-default"
      id="triggerEl"
      type="button"
      class="inline-flex h-10 w-10 items-center justify-center rounded-lg p-2 text-sm text-gray-700 hover:bg-gray-100 focus:outline-none focus:ring-2 focus:ring-gray-200 dark:text-gray-400 dark:hover:bg-gray-700 dark:focus:ring-gray-600 md:hidden"
      aria-controls="navbar-default"
      aria-expanded="false"
    >
      <span class="sr-only">Open main menu</span>
      <svg
        class="h-5 w-5"
        aria-hidden="true"
        xmlns="http://www.w3.org/2000/svg"
        fill="none"
        viewBox="0 0 17 14"
      >
        <path
          stroke="currentColor"
          stroke-linecap="round"
          stroke-linejoin="round"
          stroke-width="2"
          d="M1 1h15M1 7h15M1 13h15"></path>
      </svg>
    </button>
    <div class="hidden w-full md:block md:w-auto" id="targetEl">
      <ul
        class="mt-4 flex flex-col items-center rounded-lg border border-gray-100 bg-gray-50 p-4 font-medium dark:border-gray-700 dark:bg-slate-800 md:mt-0 md:flex-row md:space-x-8 md:border-0 md:bg-stone-100 md:p-0 md:dark:bg-slate-800"
      >
        {
          data.pages.map((page) => {
            return (
              <li>
                <a
                  class="hover:bg-red-300"
                  href={page.href}
                  class="block rounded py-2 pl-3 pr-4 text-gray-900 hover:bg-gray-100 dark:text-white dark:hover:bg-gray-700 dark:hover:text-white md:border-0 md:p-0 md:hover:bg-transparent md:dark:hover:bg-transparent"
                  aria-current="page"
                >
                  {page.title}
                </a>
              </li>
            )
          })
        }
        <li>
          <!-- <DarkModeToggle /> -->
        </li>
      </ul>
    </div>
  </div>
</nav>

<style>
  .hamburg {
    fill: black;
  }
  body.dark .hamburg {
    fill: white;
  }
  /* a:hover {
    color: greenyellow;
  } */
</style>

<script>
  // set the target element that will be collapsed or expanded (eg. navbar menu)
  const $targetEl = document.getElementById('targetEl')

  // optionally set a trigger element (eg. a button, hamburger icon)
  const $triggerEl = document.getElementById('triggerEl')

  // optional options with default values and callback functions
  const options = {
    onCollapse: () => {
      console.log('element has been collapsed')
    },
    onExpand: () => {
      console.log('element has been expanded')
    },
    onToggle: () => {
      console.log('element has been toggled')
    },
  }

  import { Collapse } from 'flowbite'

  /*
   * $targetEl: required
   * $triggerEl: optional
   * options: optional
   */
  const collapse = new Collapse($targetEl, $triggerEl, options)

  // show the target element
  collapse.expand()

  // hide the target element
  collapse.collapse()

  // toggle the visibility of the target element
  collapse.toggle()

  //open page with collapsed menu
  document.addEventListener('astro:page-load', () => {
    // This only runs once.
    collapse.collapse()
  })

  document.addEventListener('astro:after-swap', collapse.expand)
</script>
